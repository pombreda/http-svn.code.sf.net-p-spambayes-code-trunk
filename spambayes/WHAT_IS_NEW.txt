This file covers the major changes between each release.  For more details,
the reader is referred to the changelog (CHANGELOG.TXT in the main directory
of the archive), or for extreme details, to the check-ins archive (see
<http://mail.python.org/pipermail/spambayes-checkins>)
                                                                   
Changes are broken into sections, so that it's easier for you to find the
changes that are relevant to you.

Any actions necessary to move to this release from the previous release are
noted in the "Transition" section.  You should also read the "Incompatible
changes" section.

New in Release 1.0
==================

--------------------------
** Incompatible changes **
--------------------------

There should be no incompatible changes (from 1.0b1) in this release.


-------------------
** Other changes **
-------------------

Outlook Plugin
--------------
 o Default buttons in some dialogs have been corrected.

IMAP Filter
-----------
 o The code that allows the filter to keep going when a message cannot
   be parsed correctly has been strengthened.  If the filter crashed
   with a "TypeError" when processing some messages, this should fix
   that problem.
 o If the move_trained_[ham|spam]_to_folder options were used, this
   would wipe out the SpamBayes headers.  This is now fixed.

General
-------
 o Added -R/--reverse flag to tte.py
 o Fix an error that stopped the notes filter working at all in many cases.


Transition
==========
If you are transitioning from a version older than 1.0b1, please
read the notes in the previous release notes (accessible from
<http://sourceforge.net/project/showfiles.php?group_id=61702>).


Reported Bugs Fixed
===================
The following bugs tracked via the Sourceforge system were fixed:
    940155, 941596, 918157

A URL containing the details of these bugs can be made by appending the
bug number to this URL:
http://sourceforge.net/tracker/index.php?func=detail&group_id=61702&atid=498103&aid=


Feature Requests Added
======================
No feature requests tracked via the Sourceforge system were added for this
release.


Patches integrated
===================
No patches tracked via the Sourceforge system were integrated for this
release.


Newly Deprecated Options
========================

Since 1.0a9, SpamBayes has had a method of noting options that are
deprecated and which will not be available in future releases (it is
likely that options will only be deprecated for one release before being
removed).  Deprecated options will not be offered in the graphical
interfaces (Outlook plugin and web interface), and will be listed in
the "What's New" file (this file) for each release.

Deprecated options have the same name as previously, but now begin with
"x-" (so "extract_dow" is now "x-extract_dow").  You can continue to use
the original name (e.g. "extract_dow") in your configuration file, but will
receive warnings in your log file or console window.  We recommend that you
examine this output every time you upgrade SpamBayes to ensure that you are
not using any newly deprecated options.

Discussion regarding the deprecation of any particular option can be found
in the spambayes-dev archives (at
<http://mail.python.org/pipermail/spambayes-dev>).

No options have been deprecated in this release.

The following options are still deprecated and will be removed in the near
future, unless testing indicates otherwise:
  o [Tokenizer] generate_time_buckets
  o [Tokenizer] extract_dow
  o [Classifier] experimental_ham_spam_imbalance_adjustment


New Experimental Options
========================

Since 1.0a9, SpamBayes has had a method of noting options that are
experimental and which may be removed or made permanent in future releases
(many experimental options will only be experimental for one release before
being removed or fully integrated).  Experimental options are not exposed
by the Outlook plugin, and are listed on a separate
"Experimental Configuration" page in the web interface.  The options will
be listed in the "What's New" file (this file) for each release.

Experimental options begin with "x-" (as do deprecated options).  If you
start using an experimental option and it later becomes permanent you can
continue to use the "x-" name in your configuration file, but will
receive warnings in your log file or console window.  We recommend that you
examine this output every time you upgrade SpamBayes to ensure that you are
using the correct name for all options.

Discussion of why experimental options and results from using them can be
found in the spambayes-dev archives (at
<http://mail.python.org/pipermail/spambayes-dev>).  Ideally, we would like
users to test these options out on their mail and let us know the results.
This can be as simple as turning on the option and emailing
spambayes@python.org with anecdotal results after a period of time, or the
full testtools scripts can be used.  For details about using these, please
read the "README-DEVEL.txt" file that comes with the SpamBayes source
archive.

Experimental options are always turned off by default.

No experimental options have been added in this release.

Experimental options that are currently available (which we invite you to
try out and report back your results) include:
  o [Tokenizer] x-search_for_habeas_headers
  o [Tokenizer] x-reduce_habeas_headers
    These generate tokens based on the Habeas headers (see
    <http://habeas.com> for more details).
  
  o [Classifier] x-use_bigrams
    By default, SpamBayes uses unigrams tokens that are basically
    single words (split on whitespace).  This option enables both unigrams
    and bigrams (pairs of words), but uses a 'tiling' scheme, where only
    the set of unigrams and bigrams that have the strongest effect on
    the message are used.

  o [URLRetriever] x-slurp_urls
  o [URLRetriever] x-cache_expiry_days
  o [URLRetriever] x-cache_directory
  o [URLRetriever] x-only_slurp_base
  o [URLRetriever] x-web_prefix
    If these are used, if a message is scored as 'unsure', and could use
    more tokens in its classification, then text from any URLs in the
    message is retrieved and used, if it makes a difference to the
    classification.

  o [Tokenizer] x-pick_apart_urls
    Pick out some semantic bits from URLs.

  o [Tokenizer] x-fancy_url_recognition
    Recognize 'abbreviated' URLs of the form www.xyz.com or ftp.xyz.com as
    http://www.xyz.com and ftp://ftp.xyz.com, respectively.  This gets rid
    of some fairly common "skip:w NNN" tokens.
